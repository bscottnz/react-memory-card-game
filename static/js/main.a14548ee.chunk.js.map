{"version":3,"sources":["pokemon-logo.png","components/Header.js","components/PokemonCard.js","pokemon.js","components/Game.js","components/Score.js","App.js","index.js"],"names":["Header","className","src","logo","PokemonCard","name","URL","handleClick","id","onClick","e","pokemon","Game","incrementScore","resetScore","useState","currentPokemon","setCurrentPokemon","selectedPokemon","setSelectedPokemon","visibility","style","setStyle","sleep","milliseconds","Promise","resolve","setTimeout","generatePokemonToDisplay","randomNumbers","toDisplay","score","length","pokemonToReshow","randomPokemonIndex","Math","floor","random","includes","push","array","i","j","shuffleArray","forEach","num","pokemonData","imageURL","useEffect","then","prevState","Score","highScore","App","setScore","setHighScore","prevScore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAe,MAA0B,yC,OCc1BA,EAXA,WACb,OACE,sBAAKC,UAAU,SAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKC,IAAKC,MAEZ,mBAAGF,UAAU,YAAb,6B,OCOSG,EAdK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,GAC7C,OACE,sBACEP,UAAU,eACVQ,QAAS,SAACC,GACRH,EAAYC,IAHhB,UAME,qBAAKN,IAAKI,EAAKL,UAAU,sBACzB,mBAAGA,UAAU,qBAAb,SAAmCI,QC+I1BM,EA1JC,CACd,YACA,UACA,WACA,aACA,aACA,YACA,WACA,YACA,YACA,WACA,UACA,aACA,SACA,SACA,WACA,SACA,YACA,UACA,UACA,WACA,UACA,SACA,QACA,QACA,UACA,SACA,YACA,YACA,UACA,WACA,YACA,UACA,WACA,WACA,WACA,WACA,SACA,YACA,aACA,aACA,QACA,SACA,SACA,QACA,YACA,QACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,YACA,WACA,UACA,YACA,YACA,OACA,UACA,WACA,SACA,UACA,UACA,aACA,aACA,aACA,YACA,aACA,UACA,WACA,QACA,SACA,WACA,WACA,UACA,YACA,WACA,aACA,QACA,SACA,OACA,UACA,SACA,MACA,WACA,WACA,SACA,UACA,SACA,OACA,UACA,QACA,SACA,UACA,UACA,YACA,YACA,YACA,SACA,UACA,YACA,aACA,YACA,UACA,UACA,UACA,SACA,UACA,UACA,aACA,SACA,SACA,UACA,UACA,SACA,UACA,WACA,UACA,OACA,aACA,SACA,SACA,SACA,WACA,WACA,SACA,QACA,QACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,aACA,UACA,WACA,SACA,UACA,UACA,YACA,YACA,SACA,OC8BaC,EAjLF,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WAAiB,EAEHC,mBAAS,IAFN,mBAExCC,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","file":"static/js/main.a14548ee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokemon-logo.534c6564.png\";","import React from 'react';\nimport logo from '../pokemon-logo.png';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"logo-container\">\n        <img src={logo} />\n      </div>\n      <p className=\"sub-title\">Memory Game</p>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useEffect, useState } from 'react';\n\nconst PokemonCard = ({ name, URL, handleClick, id }) => {\n  return (\n    <div\n      className=\"pokemon-card\"\n      onClick={(e) => {\n        handleClick(id);\n      }}\n    >\n      <img src={URL} className=\"pokemon-card__img\" />\n      <p className=\"pokemon-card__name\">{name}</p>\n    </div>\n  );\n};\n\nexport default PokemonCard;\n","const pokemon = [\n  'Bulbasaur',\n  'Ivysaur',\n  'Venusaur',\n  'Charmander',\n  'Charmeleon',\n  'Charizard',\n  'Squirtle',\n  'Wartortle',\n  'Blastoise',\n  'Caterpie',\n  'Metapod',\n  'Butterfree',\n  'Weedle',\n  'Kakuna',\n  'Beedrill',\n  'Pidgey',\n  'Pidgeotto',\n  'Pidgeot',\n  'Rattata',\n  'Raticate',\n  'Spearow',\n  'Fearow',\n  'Ekans',\n  'Arbok',\n  'Pikachu',\n  'Raichu',\n  'Sandshrew',\n  'Sandslash',\n  'Nidoran',\n  'Nidorina',\n  'Nidoqueen',\n  'Nidoran',\n  'Nidorino',\n  'Nidoking',\n  'Clefairy',\n  'Clefable',\n  'Vulpix',\n  'Ninetales',\n  'Jigglypuff',\n  'Wigglytuff',\n  'Zubat',\n  'Golbat',\n  'Oddish',\n  'Gloom',\n  'Vileplume',\n  'Paras',\n  'Parasect',\n  'Venonat',\n  'Venomoth',\n  'Diglett',\n  'Dugtrio',\n  'Meowth',\n  'Persian',\n  'Psyduck',\n  'Golduck',\n  'Mankey',\n  'Primeape',\n  'Growlithe',\n  'Arcanine',\n  'Poliwag',\n  'Poliwhirl',\n  'Poliwrath',\n  'Abra',\n  'Kadabra',\n  'Alakazam',\n  'Machop',\n  'Machoke',\n  'Machamp',\n  'Bellsprout',\n  'Weepinbell',\n  'Victreebel',\n  'Tentacool',\n  'Tentacruel',\n  'Geodude',\n  'Graveler',\n  'Golem',\n  'Ponyta',\n  'Rapidash',\n  'Slowpoke',\n  'Slowbro',\n  'Magnemite',\n  'Magneton',\n  \"Farfetch'd\",\n  'Doduo',\n  'Dodrio',\n  'Seel',\n  'Dewgong',\n  'Grimer',\n  'Muk',\n  'Shellder',\n  'Cloyster',\n  'Gastly',\n  'Haunter',\n  'Gengar',\n  'Onix',\n  'Drowzee',\n  'Hypno',\n  'Krabby',\n  'Kingler',\n  'Voltorb',\n  'Electrode',\n  'Exeggcute',\n  'Exeggutor',\n  'Cubone',\n  'Marowak',\n  'Hitmonlee',\n  'Hitmonchan',\n  'Lickitung',\n  'Koffing',\n  'Weezing',\n  'Rhyhorn',\n  'Rhydon',\n  'Chansey',\n  'Tangela',\n  'Kangaskhan',\n  'Horsea',\n  'Seadra',\n  'Goldeen',\n  'Seaking',\n  'Staryu',\n  'Starmie',\n  'Mr. Mime',\n  'Scyther',\n  'Jynx',\n  'Electabuzz',\n  'Magmar',\n  'Pinsir',\n  'Tauros',\n  'Magikarp',\n  'Gyarados',\n  'Lapras',\n  'Ditto',\n  'Eevee',\n  'Vaporeon',\n  'Jolteon',\n  'Flareon',\n  'Porygon',\n  'Omanyte',\n  'Omastar',\n  'Kabuto',\n  'Kabutops',\n  'Aerodactyl',\n  'Snorlax',\n  'Articuno',\n  'Zapdos',\n  'Moltres',\n  'Dratini',\n  'Dragonair',\n  'Dragonite',\n  'Mewtwo',\n  'Mew',\n];\n\nexport default pokemon;\n","import { useState, useEffect } from 'react';\nimport PokemonCard from './PokemonCard';\nimport pokemon from '../pokemon';\n\nconst Game = ({ incrementScore, resetScore }) => {\n  // the pokemon currently on display\n  const [currentPokemon, setCurrentPokemon] = useState([]);\n  // the pokemon that have been selected\n  const [selectedPokemon, setSelectedPokemon] = useState([]);\n\n  const [style, setStyle] = useState({ visibility: 'hidden' });\n\n  // create image url for given pokemon id (array index + 1)\n  const generateImageURL = (id) => {\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${id}.svg`;\n  };\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  // generate array of pokemon to display\n  const generatePokemonToDisplay = () => {\n    // array of 4 unique index numbers for pokemon array\n    const randomNumbers = [];\n    // array of 4 pokemon that will be displayed to screen\n    const toDisplay = [];\n\n    const score = selectedPokemon.length;\n\n    // reshow selected pokemon until they are 3 out of 4 options\n    // pokemon id is 1 more than its index\n    if (score === 1) {\n      randomNumbers[0] = selectedPokemon[0];\n    }\n\n    if (score === 2) {\n      randomNumbers[1] = selectedPokemon[1];\n      randomNumbers[0] = selectedPokemon[0];\n    }\n\n    if (score === 3) {\n      randomNumbers[1] = selectedPokemon[1];\n      randomNumbers[2] = selectedPokemon[2];\n      randomNumbers[0] = selectedPokemon[0];\n    }\n\n    // show 3 random previously selected pokemon\n    if (score > 3) {\n      const pokemonToReshow = [];\n\n      while (pokemonToReshow.length < 3) {\n        // number between 0 and selectedPokemonLength -1\n        const randomPokemonIndex = Math.floor(Math.random() * selectedPokemon.length);\n\n        if (!pokemonToReshow.includes(randomPokemonIndex)) {\n          pokemonToReshow.push(randomPokemonIndex);\n        }\n      }\n\n      randomNumbers[1] = selectedPokemon[pokemonToReshow[1]];\n      randomNumbers[2] = selectedPokemon[pokemonToReshow[2]];\n      randomNumbers[0] = selectedPokemon[pokemonToReshow[0]];\n    }\n\n    // generate 4 unique random numbers between 0 and 150 and append to randomNumbers on first load,\n    // then only generate enough random nunmbers to fill array\n\n    // i had this while loop at the top originally, before the if statements and sometimes\n    // i would get duplicate pokemon.\n    while (randomNumbers.length < 4) {\n      const randomPokemonIndex = Math.floor(Math.random() * 151);\n\n      if (!randomNumbers.includes(randomPokemonIndex)) {\n        randomNumbers.push(randomPokemonIndex);\n      }\n    }\n\n    function shuffleArray(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n    }\n\n    shuffleArray(randomNumbers);\n\n    // use the 4 random numbers to access 4 random pokemon\n    randomNumbers.forEach((num) => {\n      const pokemonData = {\n        name: pokemon[num],\n        imageURL: generateImageURL(num + 1),\n        id: num,\n      };\n\n      toDisplay.push(pokemonData);\n    });\n    // console.log(toDisplay);\n    setCurrentPokemon(toDisplay);\n    // console.log(currentPokemon);\n  };\n\n  // useEffect(() => {\n  //   setStyle({});\n  // });\n\n  useEffect(() => {\n    generatePokemonToDisplay();\n    sleep(1000).then(() => {\n      setStyle({});\n    });\n  }, []);\n\n  // testing rare duplicate pokemon bug\n  // useEffect(() => {\n  //   console.log(currentPokemon);\n  //   console.log(selectedPokemon);\n  // }, [currentPokemon]);\n\n  useEffect(() => {\n    // reset display\n\n    // hide pokemon after every reload\n    setStyle({ visibility: 'hidden' });\n\n    // make sure the hidden visibility is applied before the pokemon to display updates\n    sleep(200).then(() => {\n      generatePokemonToDisplay();\n    });\n\n    // after .7s, show the pokemon again\n    sleep(700).then(() => {\n      setStyle({});\n    });\n  }, [selectedPokemon]);\n\n  const handleClick = (id) => {\n    // only add selected pokemon if it has not been previously selected\n    if (!selectedPokemon.includes(id)) {\n      setSelectedPokemon((prevState) => {\n        return [...prevState, id];\n      });\n      incrementScore();\n    } else {\n      resetScore();\n      setSelectedPokemon([]);\n    }\n  };\n\n  return (\n    currentPokemon.length > 0 && (\n      <div className={'card-container'} style={style}>\n        <PokemonCard\n          URL={currentPokemon[0].imageURL}\n          id={currentPokemon[0].id}\n          name={currentPokemon[0].name}\n          handleClick={handleClick}\n        />\n        <PokemonCard\n          URL={currentPokemon[1].imageURL}\n          id={currentPokemon[1].id}\n          name={currentPokemon[1].name}\n          handleClick={handleClick}\n        />\n        <PokemonCard\n          URL={currentPokemon[2].imageURL}\n          id={currentPokemon[2].id}\n          name={currentPokemon[2].name}\n          handleClick={handleClick}\n        />\n        <PokemonCard\n          URL={currentPokemon[3].imageURL}\n          id={currentPokemon[3].id}\n          name={currentPokemon[3].name}\n          handleClick={handleClick}\n        />\n      </div>\n    )\n  );\n};\n\nexport default Game;\n","const Score = ({ score, highScore }) => {\n  return (\n    <div className=\"score\">\n      <p className=\"game-rules\">\n        Test your memory by selecting a Pokemon and reshuffling the cards. Don't select the same\n        Pokemon twice!\n      </p>\n      <div>Score: {score}</div>\n      <div>High Score: {highScore}</div>\n    </div>\n  );\n};\n\nexport default Score;\n","import { useEffect, useState } from 'react';\nimport Header from './components/Header';\nimport Game from './components/Game';\nimport Score from './components/Score';\n\nfunction App() {\n  // current score\n  const [score, setScore] = useState(0);\n  // high score\n  const [highScore, setHighScore] = useState(0);\n\n  const incrementScore = () => {\n    setScore((prevScore) => {\n      return prevScore + 1;\n    });\n  };\n\n  const resetScore = () => {\n    setScore(0);\n  };\n\n  useEffect(() => {\n    if (score > highScore) {\n      setHighScore(score);\n    }\n  }, [score]);\n\n  return (\n    <div className=\"content\">\n      <Header />\n      <Game incrementScore={incrementScore} resetScore={resetScore} />\n      <Score score={score} highScore={highScore} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}